
> library-backend@1.0.0 dev
> nodemon src/server.js

[33m[nodemon] 3.1.10[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching path(s): *.*[39m
[33m[nodemon] watching extensions: js,mjs,cjs,json[39m
[32m[nodemon] starting `node src/server.js`[39m
[dotenv@17.2.1] injecting env (19) from .env -- tip: ⚙️  load multiple .env files with { path: ['.env.local', '.env'] }
[dotenv@17.2.1] injecting env (0) from .env -- tip: ⚙️  specify custom .env file path with { path: '/custom/path/.env' }
2025-08-02 18:10:16:1016 [32m[32minfo[32m[39m: [32m[32mTesting database connection...[32m[39m
2025-08-02 18:10:16:1016 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 18:10:16:1016 [32m[32minfo[32m[39m: [32m[32mDatabase connected successfully[32m[39m {
  "poolStats": {
    "total": 1,
    "idle": 0,
    "waiting": 0
  }
}
2025-08-02 18:10:16:1016 [32m[32minfo[32m[39m: [32m[32mDatabase connection established[32m[39m
2025-08-02 18:10:16:1016 [32m[32minfo[32m[39m: [32m[32m🚀 Library Management System API started[32m[39m
2025-08-02 18:10:16:1016 [32m[32minfo[32m[39m: [32m[32m📡 Server listening on port 5001[32m[39m
2025-08-02 18:10:16:1016 [32m[32minfo[32m[39m: [32m[32m🌍 Environment: development[32m[39m
2025-08-02 18:10:16:1016 [32m[32minfo[32m[39m: [32m[32m📚 API Documentation: http://localhost:5001/api-docs[32m[39m
2025-08-02 18:10:16:1016 [32m[32minfo[32m[39m: [32m[32m💻 Health Check: http://localhost:5001/health[32m[39m
2025-08-02 18:10:16:1016 [32m[32minfo[32m[39m: [32m[32m[32m[39m
[32m[32m🔑 Test Accounts:[32m[39m
2025-08-02 18:10:16:1016 [32m[32minfo[32m[39m: [32m[32mLibrarian: librarian@library.com / LibPass123![32m[39m
2025-08-02 18:10:16:1016 [32m[32minfo[32m[39m: [32m[32mMember: member@library.com / MemPass123![32m[39m
2025-08-02 18:10:16:1016 [32m[32minfo[32m[39m: [32m[32mAikaterini: aikaterini.chavela@library.com / AikaPass123![32m[39m
2025-08-02 18:10:46:1046 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
[0mGET /api/auth/me [33m401[0m 2.236 ms - 48[0m
[0mGET /api/auth/me [33m401[0m 0.437 ms - 48[0m
2025-08-02 18:11:04:114 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 18:11:04:114 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 18:11:04:114 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 18:11:04:114 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 18:11:04:114 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 27,
  "rows": 1
}
2025-08-02 18:11:04:114 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 25,
  "rows": 1
}
2025-08-02 18:11:04:114 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 43,
  "rows": 10
}
[0mGET /api/books/recent [36m304[0m 44.556 ms - -[0m
2025-08-02 18:11:04:114 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 48,
  "rows": 1
}
[0mGET /api/books/popular [36m304[0m 51.603 ms - -[0m
2025-08-02 18:11:04:114 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 10
}
[0mGET /api/books/recent [36m304[0m 1.774 ms - -[0m
2025-08-02 18:11:04:114 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 1
}
[0mGET /api/books/popular [36m304[0m 1.936 ms - -[0m
2025-08-02 18:11:04:114 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "UPDATE users SET refresh_token = $1 WHERE id = $2",
  "duration": 10,
  "rows": 1
}
[0mPOST /api/auth/refresh [32m200[0m 39.056 ms - 578[0m
2025-08-02 18:11:04:114 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "UPDATE users SET refresh_token = $1 WHERE id = $2",
  "duration": 10,
  "rows": 1
}
[0mPOST /api/auth/refresh [32m200[0m 35.938 ms - 578[0m
2025-08-02 18:11:04:114 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 1,
  "rows": 1
}
[0mGET /api/auth/me [32m200[0m 1.506 ms - 262[0m
2025-08-02 18:11:04:114 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 1,
  "rows": 1
}
[0mGET /api/auth/me [36m304[0m 0.787 ms - -[0m
2025-08-02 18:11:30:1130 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 0,
  "rows": 1
}
2025-08-02 18:11:30:1130 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "UPDATE users SET refresh_token = $1 WHERE id = $2",
  "duration": 1,
  "rows": 1
}
2025-08-02 18:11:30:1130 [32m[32minfo[32m[39m: [32m[32mUser logged out successfully[32m[39m {
  "userId": "8f67dba0-ee04-40eb-ae05-21fe8e3ab70d",
  "email": "member@library.com"
}
[0mPOST /api/auth/logout [32m200[0m 1.644 ms - 31[0m
2025-08-02 18:11:34:1134 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
2025-08-02 18:11:34:1134 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
2025-08-02 18:11:34:1134 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
2025-08-02 18:11:50:1150 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE email = $1",
  "duration": 3,
  "rows": 1
}
2025-08-02 18:11:50:1150 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "UPDATE users SET refresh_token = $1 WHERE id = $2",
  "duration": 1,
  "rows": 1
}
2025-08-02 18:11:50:1150 [32m[32minfo[32m[39m: [32m[32mUser logged in successfully[32m[39m {
  "userId": "73697252-2a28-4b7a-9bda-51f8ef36d320",
  "email": "librarian@library.com",
  "rememberMe": false
}
[0mPOST /api/auth/login [32m200[0m 211.092 ms - 884[0m
2025-08-02 18:11:50:1150 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 5,
  "rows": 1
}
[0mGET /api/books/popular [36m304[0m 5.632 ms - -[0m
2025-08-02 18:11:50:1150 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 1
}
[0mGET /api/books/popular [36m304[0m 1.833 ms - -[0m
2025-08-02 18:11:50:1150 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 18:11:50:1150 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 25,
  "rows": 10
}
[0mGET /api/books/recent [36m304[0m 25.813 ms - -[0m
2025-08-02 18:11:50:1150 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 10
}
[0mGET /api/books/recent [36m304[0m 2.208 ms - -[0m
2025-08-02 18:11:50:1150 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 1,
  "rows": 1
}
2025-08-02 18:11:50:1150 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        COUNT(*) as total_loans,\n        COUNT(*) FILTER (WHERE status = 'active') as active_loans,\n        COUNT(*) FILTER (WHERE status = 'returned') as returned_loans,\n        COUNT(*) FILTER (WHERE status = 'overdue') as overdue_loans,\n        COUNT(*) FILTER (WHERE status = 'active' AND due_date < NOW()) as newly_overdue,\n        COUNT(*) FILTER (WHERE loan_date >= NOW() - INTERVAL '30 days') as loans_this_month,\n        AVG(EXTRACT(DAY FROM (return_date - loan_date)))::INTEGER as avg_loan_duration,\n        COUNT(DISTINCT user_id) as active_borrowers,\n        COUNT(DISTINCT book_id) as borrowed_books\n      FROM book_loans\n    ",
  "duration": 2,
  "rows": 1
}
[0mGET /api/loans/statistics [32m200[0m 3.980 ms - 248[0m
2025-08-02 18:11:50:1150 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 1,
  "rows": 1
}
2025-08-02 18:11:50:1150 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        COUNT(*) as total_loans,\n        COUNT(*) FILTER (WHERE status = 'active') as active_loans,\n        COUNT(*) FILTER (WHERE status = 'returned') as returned_loans,\n        COUNT(*) FILTER (WHERE status = 'overdue') as overdue_loans,\n        COUNT(*) FILTER (WHERE status = 'active' AND due_date < NOW()) as newly_overdue,\n        COUNT(*) FILTER (WHERE loan_date >= NOW() - INTERVAL '30 days') as loans_this_month,\n        AVG(EXTRACT(DAY FROM (return_date - loan_date)))::INTEGER as avg_loan_duration,\n        COUNT(DISTINCT user_id) as active_borrowers,\n        COUNT(DISTINCT book_id) as borrowed_books\n      FROM book_loans\n    ",
  "duration": 0,
  "rows": 1
}
[0mGET /api/loans/statistics [36m304[0m 1.426 ms - -[0m
2025-08-02 18:12:20:1220 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
2025-08-02 18:12:20:1220 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
2025-08-02 18:15:35:1535 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 18:15:35:1535 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT COUNT(DISTINCT b.id) \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n     \n    ",
  "duration": 31,
  "rows": 1
}
2025-08-02 18:15:35:1535 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n    \n      \n      GROUP BY b.id\n      ORDER BY b.title ASC\n      LIMIT $1 OFFSET $2\n    ",
  "duration": 1,
  "rows": 10
}
[0mGET /api/books?page=1&limit=10&search= [32m200[0m 51.960 ms - -[0m
2025-08-02 18:15:39:1539 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 1,
  "rows": 1
}
[0mGET /api/auth/me [32m200[0m 2.057 ms - 294[0m
2025-08-02 18:15:39:1539 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 0,
  "rows": 1
}
[0mGET /api/auth/me [36m304[0m 1.477 ms - -[0m
2025-08-02 18:15:39:1539 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT COUNT(DISTINCT b.id) \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n     \n    ",
  "duration": 1,
  "rows": 1
}
2025-08-02 18:15:39:1539 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n    \n      \n      GROUP BY b.id\n      ORDER BY b.title ASC\n      LIMIT $1 OFFSET $2\n    ",
  "duration": 1,
  "rows": 10
}
[0mGET /api/books?page=1&limit=10&search= [36m304[0m 2.757 ms - -[0m
2025-08-02 18:15:39:1539 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT COUNT(DISTINCT b.id) \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n     \n    ",
  "duration": 0,
  "rows": 1
}
2025-08-02 18:15:39:1539 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n    \n      \n      GROUP BY b.id\n      ORDER BY b.title ASC\n      LIMIT $1 OFFSET $2\n    ",
  "duration": 0,
  "rows": 10
}
[0mGET /api/books?page=1&limit=10&search= [36m304[0m 1.719 ms - -[0m
2025-08-02 18:16:09:169 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node src/server.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node src/server.js`[39m
[dotenv@17.2.1] injecting env (19) from .env -- tip: 🔐 prevent committing .env to code: https://dotenvx.com/precommit
[dotenv@17.2.1] injecting env (0) from .env -- tip: ⚙️  write to custom object with { processEnv: myObject }
2025-08-02 18:24:32:2432 [32m[32minfo[32m[39m: [32m[32mTesting database connection...[32m[39m
2025-08-02 18:24:32:2432 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 18:24:32:2432 [32m[32minfo[32m[39m: [32m[32mDatabase connected successfully[32m[39m {
  "poolStats": {
    "total": 1,
    "idle": 0,
    "waiting": 0
  }
}
2025-08-02 18:24:32:2432 [32m[32minfo[32m[39m: [32m[32mDatabase connection established[32m[39m
2025-08-02 18:24:32:2432 [32m[32minfo[32m[39m: [32m[32m🚀 Library Management System API started[32m[39m
2025-08-02 18:24:32:2432 [32m[32minfo[32m[39m: [32m[32m📡 Server listening on port 5001[32m[39m
2025-08-02 18:24:32:2432 [32m[32minfo[32m[39m: [32m[32m🌍 Environment: development[32m[39m
2025-08-02 18:24:32:2432 [32m[32minfo[32m[39m: [32m[32m📚 API Documentation: http://localhost:5001/api-docs[32m[39m
2025-08-02 18:24:32:2432 [32m[32minfo[32m[39m: [32m[32m💻 Health Check: http://localhost:5001/health[32m[39m
2025-08-02 18:24:32:2432 [32m[32minfo[32m[39m: [32m[32m[32m[39m
[32m[32m🔑 Test Accounts:[32m[39m
2025-08-02 18:24:32:2432 [32m[32minfo[32m[39m: [32m[32mLibrarian: librarian@library.com / LibPass123![32m[39m
2025-08-02 18:24:32:2432 [32m[32minfo[32m[39m: [32m[32mMember: member@library.com / MemPass123![32m[39m
2025-08-02 18:24:32:2432 [32m[32minfo[32m[39m: [32m[32mAikaterini: aikaterini.chavela@library.com / AikaPass123![32m[39m
2025-08-02 18:24:38:2438 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 1,
  "rows": 1
}
[0mGET /api/auth/me [36m304[0m 4.055 ms - -[0m
2025-08-02 18:24:38:2438 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 0,
  "rows": 1
}
[0mGET /api/auth/me [36m304[0m 1.153 ms - -[0m
2025-08-02 18:24:38:2438 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT COUNT(DISTINCT b.id) \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n     \n    ",
  "duration": 3,
  "rows": 1
}
2025-08-02 18:24:38:2438 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n    \n      \n      GROUP BY b.id\n      ORDER BY b.title ASC\n      LIMIT $1 OFFSET $2\n    ",
  "duration": 1,
  "rows": 10
}
[0mGET /api/books?page=1&limit=10&search= [32m200[0m 8.312 ms - -[0m
2025-08-02 18:24:38:2438 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT COUNT(DISTINCT b.id) \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n     \n    ",
  "duration": 0,
  "rows": 1
}
2025-08-02 18:24:38:2438 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n    \n      \n      GROUP BY b.id\n      ORDER BY b.title ASC\n      LIMIT $1 OFFSET $2\n    ",
  "duration": 1,
  "rows": 10
}
[0mGET /api/books?page=1&limit=10&search= [36m304[0m 2.475 ms - -[0m
2025-08-02 18:25:08:258 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
2025-08-02 18:25:41:2541 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 18:25:41:2541 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 23,
  "rows": 1
}
[0mGET /api/auth/me [36m304[0m 22.799 ms - -[0m
2025-08-02 18:25:41:2541 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 1,
  "rows": 1
}
[0mGET /api/auth/me [36m304[0m 2.564 ms - -[0m
2025-08-02 18:25:41:2541 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 1,
  "rows": 1
}
2025-08-02 18:25:41:2541 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT COUNT(*) \n      FROM book_loans bl \n      \n    ",
  "duration": 1,
  "rows": 1
}
2025-08-02 18:25:41:2541 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        bl.*,\n        b.title as book_title,\n        b.author as book_author,\n        b.isbn as book_isbn,\n        b.cover_image_url as book_cover,\n        u.first_name || ' ' || u.last_name as user_name,\n        u.email as user_email\n      FROM book_loans bl\n      JOIN books b ON bl.book_id = b.id\n      JOIN users u ON bl.user_id = u.id\n      \n      ORDER BY bl.loan_date DESC\n      LIMIT $1 OFFSET $2\n    ",
  "duration": 2,
  "rows": 1
}
[0mGET /api/loans?page=1&limit=20 [32m200[0m 6.007 ms - 820[0m
2025-08-02 18:25:41:2541 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 0,
  "rows": 1
}
2025-08-02 18:25:41:2541 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT COUNT(*) \n      FROM book_loans bl \n      \n    ",
  "duration": 0,
  "rows": 1
}
2025-08-02 18:25:41:2541 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        bl.*,\n        b.title as book_title,\n        b.author as book_author,\n        b.isbn as book_isbn,\n        b.cover_image_url as book_cover,\n        u.first_name || ' ' || u.last_name as user_name,\n        u.email as user_email\n      FROM book_loans bl\n      JOIN books b ON bl.book_id = b.id\n      JOIN users u ON bl.user_id = u.id\n      \n      ORDER BY bl.loan_date DESC\n      LIMIT $1 OFFSET $2\n    ",
  "duration": 1,
  "rows": 1
}
[0mGET /api/loans?page=1&limit=20 [36m304[0m 2.368 ms - -[0m
2025-08-02 18:26:11:2611 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
2025-08-02 18:26:31:2631 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 18:26:31:2631 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 28,
  "rows": 1
}
2025-08-02 18:26:31:2631 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT COUNT(*) \n      FROM book_loans bl \n      WHERE bl.status = $1\n    ",
  "duration": 3,
  "rows": 1
}
2025-08-02 18:26:31:2631 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        bl.*,\n        b.title as book_title,\n        b.author as book_author,\n        b.isbn as book_isbn,\n        b.cover_image_url as book_cover,\n        u.first_name || ' ' || u.last_name as user_name,\n        u.email as user_email\n      FROM book_loans bl\n      JOIN books b ON bl.book_id = b.id\n      JOIN users u ON bl.user_id = u.id\n      WHERE bl.status = $1\n      ORDER BY bl.loan_date DESC\n      LIMIT $2 OFFSET $3\n    ",
  "duration": 2,
  "rows": 0
}
[0mGET /api/loans?page=1&limit=20&status=active [32m200[0m 33.778 ms - 111[0m
2025-08-02 18:26:42:2642 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 0,
  "rows": 1
}
2025-08-02 18:26:42:2642 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT COUNT(*) \n      FROM book_loans bl \n      WHERE bl.status = $1\n    ",
  "duration": 1,
  "rows": 1
}
2025-08-02 18:26:42:2642 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        bl.*,\n        b.title as book_title,\n        b.author as book_author,\n        b.isbn as book_isbn,\n        b.cover_image_url as book_cover,\n        u.first_name || ' ' || u.last_name as user_name,\n        u.email as user_email\n      FROM book_loans bl\n      JOIN books b ON bl.book_id = b.id\n      JOIN users u ON bl.user_id = u.id\n      WHERE bl.status = $1\n      ORDER BY bl.loan_date DESC\n      LIMIT $2 OFFSET $3\n    ",
  "duration": 2,
  "rows": 1
}
[0mGET /api/loans?page=1&limit=20&status=returned [32m200[0m 5.326 ms - 820[0m
2025-08-02 18:27:12:2712 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
[0mGET /api/auth/me [33m401[0m 0.628 ms - 48[0m
[0mGET /api/auth/me [33m401[0m 0.500 ms - 48[0m
2025-08-02 18:27:14:2714 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 18:27:14:2714 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 18:27:14:2714 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 30,
  "rows": 10
}
[0mGET /api/books/recent [36m304[0m 30.762 ms - -[0m
2025-08-02 18:27:14:2714 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 32,
  "rows": 1
}
[0mGET /api/books/popular [36m304[0m 33.236 ms - -[0m
2025-08-02 18:27:14:2714 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 18:27:14:2714 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 18:27:14:2714 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 10
}
[0mGET /api/books/recent [36m304[0m 2.579 ms - -[0m
2025-08-02 18:27:14:2714 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 22,
  "rows": 1
}
2025-08-02 18:27:14:2714 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 25,
  "rows": 1
}
2025-08-02 18:27:14:2714 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 4,
  "rows": 1
}
[0mGET /api/books/popular [36m304[0m 5.343 ms - -[0m
2025-08-02 18:27:14:2714 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "UPDATE users SET refresh_token = $1 WHERE id = $2",
  "duration": 3,
  "rows": 1
}
[0mPOST /api/auth/refresh [32m200[0m 27.798 ms - 604[0m
2025-08-02 18:27:14:2714 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "UPDATE users SET refresh_token = $1 WHERE id = $2",
  "duration": 3,
  "rows": 1
}
[0mPOST /api/auth/refresh [32m200[0m 30.073 ms - 604[0m
2025-08-02 18:27:14:2714 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 1,
  "rows": 1
}
[0mGET /api/auth/me [32m200[0m 1.297 ms - 294[0m
2025-08-02 18:27:14:2714 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 1,
  "rows": 1
}
[0mGET /api/auth/me [36m304[0m 1.688 ms - -[0m
2025-08-02 18:27:32:2732 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 2,
  "rows": 1
}
2025-08-02 18:27:32:2732 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 1,
  "rows": 1
}
2025-08-02 18:27:32:2732 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 1,
  "rows": 1
}
2025-08-02 18:27:32:2732 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 1,
  "rows": 1
}
2025-08-02 18:27:32:2732 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.id,\n        b.title,\n        b.author,\n        b.isbn,\n        COUNT(bl.id) as borrow_count\n      FROM books b\n      JOIN book_loans bl ON b.id = bl.book_id\n      WHERE bl.loan_date >= NOW() - INTERVAL '30 days'\n      GROUP BY b.id, b.title, b.author, b.isbn\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 0,
  "rows": 1
}
[0mGET /api/loans/most-borrowed [32m200[0m 2.457 ms - 210[0m
2025-08-02 18:27:32:2732 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        COUNT(*) as total_loans,\n        COUNT(*) FILTER (WHERE status = 'active') as active_loans,\n        COUNT(*) FILTER (WHERE status = 'returned') as returned_loans,\n        COUNT(*) FILTER (WHERE status = 'overdue') as overdue_loans,\n        COUNT(*) FILTER (WHERE status = 'active' AND due_date < NOW()) as newly_overdue,\n        COUNT(*) FILTER (WHERE loan_date >= NOW() - INTERVAL '30 days') as loans_this_month,\n        AVG(EXTRACT(DAY FROM (return_date - loan_date)))::INTEGER as avg_loan_duration,\n        COUNT(DISTINCT user_id) as active_borrowers,\n        COUNT(DISTINCT book_id) as borrowed_books\n      FROM book_loans\n    ",
  "duration": 2,
  "rows": 1
}
[0mGET /api/loans/statistics [36m304[0m 4.367 ms - -[0m
2025-08-02 18:27:32:2732 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        bl.*,\n        b.title as book_title,\n        b.author as book_author,\n        b.isbn as book_isbn,\n        u.first_name || ' ' || u.last_name as user_name,\n        u.email as user_email,\n        EXTRACT(DAY FROM (NOW() - bl.due_date))::INTEGER as days_overdue\n      FROM book_loans bl\n      JOIN books b ON bl.book_id = b.id\n      JOIN users u ON bl.user_id = u.id\n      WHERE bl.status = 'active' AND bl.due_date < NOW()\n      ORDER BY bl.due_date ASC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 0
}
[0mGET /api/loans/overdue?limit=5 [32m200[0m 3.951 ms - 60[0m
2025-08-02 18:27:32:2732 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        COUNT(*) as total_books,\n        SUM(total_copies) as total_copies,\n        SUM(available_copies) as available_copies,\n        COUNT(*) FILTER (WHERE available_copies > 0) as available_books,\n        COUNT(*) FILTER (WHERE available_copies = 0) as unavailable_books,\n        COUNT(DISTINCT author) as unique_authors,\n        COUNT(DISTINCT publisher) as unique_publishers,\n        AVG(publication_year) as avg_publication_year,\n        COUNT(*) FILTER (WHERE created_at >= NOW() - INTERVAL '30 days') as new_books_this_month\n      FROM books\n    ",
  "duration": 4,
  "rows": 1
}
[0mGET /api/books/statistics [32m200[0m 5.181 ms - 292[0m
2025-08-02 18:27:32:2732 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 2,
  "rows": 1
}
2025-08-02 18:27:32:2732 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 1,
  "rows": 1
}
2025-08-02 18:27:32:2732 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 0,
  "rows": 1
}
2025-08-02 18:27:32:2732 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 0,
  "rows": 1
}
2025-08-02 18:27:32:2732 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        COUNT(*) as total_books,\n        SUM(total_copies) as total_copies,\n        SUM(available_copies) as available_copies,\n        COUNT(*) FILTER (WHERE available_copies > 0) as available_books,\n        COUNT(*) FILTER (WHERE available_copies = 0) as unavailable_books,\n        COUNT(DISTINCT author) as unique_authors,\n        COUNT(DISTINCT publisher) as unique_publishers,\n        AVG(publication_year) as avg_publication_year,\n        COUNT(*) FILTER (WHERE created_at >= NOW() - INTERVAL '30 days') as new_books_this_month\n      FROM books\n    ",
  "duration": 1,
  "rows": 1
}
[0mGET /api/books/statistics [36m304[0m 1.461 ms - -[0m
2025-08-02 18:27:32:2732 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        bl.*,\n        b.title as book_title,\n        b.author as book_author,\n        b.isbn as book_isbn,\n        u.first_name || ' ' || u.last_name as user_name,\n        u.email as user_email,\n        EXTRACT(DAY FROM (NOW() - bl.due_date))::INTEGER as days_overdue\n      FROM book_loans bl\n      JOIN books b ON bl.book_id = b.id\n      JOIN users u ON bl.user_id = u.id\n      WHERE bl.status = 'active' AND bl.due_date < NOW()\n      ORDER BY bl.due_date ASC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 0
}
[0mGET /api/loans/overdue?limit=5 [36m304[0m 2.120 ms - -[0m
2025-08-02 18:27:32:2732 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.id,\n        b.title,\n        b.author,\n        b.isbn,\n        COUNT(bl.id) as borrow_count\n      FROM books b\n      JOIN book_loans bl ON b.id = bl.book_id\n      WHERE bl.loan_date >= NOW() - INTERVAL '30 days'\n      GROUP BY b.id, b.title, b.author, b.isbn\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 3,
  "rows": 1
}
[0mGET /api/loans/most-borrowed [36m304[0m 5.070 ms - -[0m
2025-08-02 18:27:32:2732 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        COUNT(*) as total_loans,\n        COUNT(*) FILTER (WHERE status = 'active') as active_loans,\n        COUNT(*) FILTER (WHERE status = 'returned') as returned_loans,\n        COUNT(*) FILTER (WHERE status = 'overdue') as overdue_loans,\n        COUNT(*) FILTER (WHERE status = 'active' AND due_date < NOW()) as newly_overdue,\n        COUNT(*) FILTER (WHERE loan_date >= NOW() - INTERVAL '30 days') as loans_this_month,\n        AVG(EXTRACT(DAY FROM (return_date - loan_date)))::INTEGER as avg_loan_duration,\n        COUNT(DISTINCT user_id) as active_borrowers,\n        COUNT(DISTINCT book_id) as borrowed_books\n      FROM book_loans\n    ",
  "duration": 3,
  "rows": 1
}
[0mGET /api/loans/statistics [36m304[0m 3.953 ms - -[0m
2025-08-02 18:28:02:282 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
2025-08-02 18:28:02:282 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
2025-08-02 18:28:02:282 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
2025-08-02 18:28:02:282 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
2025-08-02 18:28:30:2830 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 18:28:30:2830 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 25,
  "rows": 1
}
[0mGET /api/auth/me [36m304[0m 25.424 ms - -[0m
2025-08-02 18:28:30:2830 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 0,
  "rows": 1
}
[0mGET /api/auth/me [36m304[0m 1.073 ms - -[0m
2025-08-02 18:28:30:2830 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 2,
  "rows": 1
}
2025-08-02 18:28:30:2830 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        COUNT(*) as total_loans,\n        COUNT(*) FILTER (WHERE status = 'active') as active_loans,\n        COUNT(*) FILTER (WHERE status = 'returned') as returned_loans,\n        COUNT(*) FILTER (WHERE status = 'overdue') as overdue_loans,\n        COUNT(*) FILTER (WHERE status = 'active' AND due_date < NOW()) as newly_overdue,\n        COUNT(*) FILTER (WHERE loan_date >= NOW() - INTERVAL '30 days') as loans_this_month,\n        AVG(EXTRACT(DAY FROM (return_date - loan_date)))::INTEGER as avg_loan_duration,\n        COUNT(DISTINCT user_id) as active_borrowers,\n        COUNT(DISTINCT book_id) as borrowed_books\n      FROM book_loans\n    ",
  "duration": 2,
  "rows": 1
}
[0mGET /api/loans/statistics [36m304[0m 4.707 ms - -[0m
2025-08-02 18:28:30:2830 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 1,
  "rows": 1
}
2025-08-02 18:28:30:2830 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        COUNT(*) as total_loans,\n        COUNT(*) FILTER (WHERE status = 'active') as active_loans,\n        COUNT(*) FILTER (WHERE status = 'returned') as returned_loans,\n        COUNT(*) FILTER (WHERE status = 'overdue') as overdue_loans,\n        COUNT(*) FILTER (WHERE status = 'active' AND due_date < NOW()) as newly_overdue,\n        COUNT(*) FILTER (WHERE loan_date >= NOW() - INTERVAL '30 days') as loans_this_month,\n        AVG(EXTRACT(DAY FROM (return_date - loan_date)))::INTEGER as avg_loan_duration,\n        COUNT(DISTINCT user_id) as active_borrowers,\n        COUNT(DISTINCT book_id) as borrowed_books\n      FROM book_loans\n    ",
  "duration": 0,
  "rows": 1
}
[0mGET /api/loans/statistics [36m304[0m 1.557 ms - -[0m
2025-08-02 18:28:30:2830 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 18:28:30:2830 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 18:28:30:2830 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 18:28:30:2830 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 19,
  "rows": 1
}
2025-08-02 18:28:30:2830 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 19,
  "rows": 1
}
2025-08-02 18:28:30:2830 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 22,
  "rows": 1
}
2025-08-02 18:28:30:2830 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        COUNT(*) as total_books,\n        SUM(total_copies) as total_copies,\n        SUM(available_copies) as available_copies,\n        COUNT(*) FILTER (WHERE available_copies > 0) as available_books,\n        COUNT(*) FILTER (WHERE available_copies = 0) as unavailable_books,\n        COUNT(DISTINCT author) as unique_authors,\n        COUNT(DISTINCT publisher) as unique_publishers,\n        AVG(publication_year) as avg_publication_year,\n        COUNT(*) FILTER (WHERE created_at >= NOW() - INTERVAL '30 days') as new_books_this_month\n      FROM books\n    ",
  "duration": 1,
  "rows": 1
}
[0mGET /api/books/statistics [36m304[0m 23.089 ms - -[0m
2025-08-02 18:28:30:2830 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.id,\n        b.title,\n        b.author,\n        b.isbn,\n        COUNT(bl.id) as borrow_count\n      FROM books b\n      JOIN book_loans bl ON b.id = bl.book_id\n      WHERE bl.loan_date >= NOW() - INTERVAL '30 days'\n      GROUP BY b.id, b.title, b.author, b.isbn\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 1
}
[0mGET /api/loans/most-borrowed [36m304[0m 20.963 ms - -[0m
2025-08-02 18:28:30:2830 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        bl.*,\n        b.title as book_title,\n        b.author as book_author,\n        b.isbn as book_isbn,\n        u.first_name || ' ' || u.last_name as user_name,\n        u.email as user_email,\n        EXTRACT(DAY FROM (NOW() - bl.due_date))::INTEGER as days_overdue\n      FROM book_loans bl\n      JOIN books b ON bl.book_id = b.id\n      JOIN users u ON bl.user_id = u.id\n      WHERE bl.status = 'active' AND bl.due_date < NOW()\n      ORDER BY bl.due_date ASC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 0
}
[0mGET /api/loans/overdue?limit=5 [36m304[0m 22.151 ms - -[0m
2025-08-02 18:28:30:2830 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 1,
  "rows": 1
}
2025-08-02 18:28:30:2830 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 0,
  "rows": 1
}
2025-08-02 18:28:30:2830 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 1,
  "rows": 1
}
2025-08-02 18:28:30:2830 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        COUNT(*) as total_books,\n        SUM(total_copies) as total_copies,\n        SUM(available_copies) as available_copies,\n        COUNT(*) FILTER (WHERE available_copies > 0) as available_books,\n        COUNT(*) FILTER (WHERE available_copies = 0) as unavailable_books,\n        COUNT(DISTINCT author) as unique_authors,\n        COUNT(DISTINCT publisher) as unique_publishers,\n        AVG(publication_year) as avg_publication_year,\n        COUNT(*) FILTER (WHERE created_at >= NOW() - INTERVAL '30 days') as new_books_this_month\n      FROM books\n    ",
  "duration": 1,
  "rows": 1
}
[0mGET /api/books/statistics [36m304[0m 2.049 ms - -[0m
2025-08-02 18:28:30:2830 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.id,\n        b.title,\n        b.author,\n        b.isbn,\n        COUNT(bl.id) as borrow_count\n      FROM books b\n      JOIN book_loans bl ON b.id = bl.book_id\n      WHERE bl.loan_date >= NOW() - INTERVAL '30 days'\n      GROUP BY b.id, b.title, b.author, b.isbn\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 1
}
[0mGET /api/loans/most-borrowed [36m304[0m 1.695 ms - -[0m
2025-08-02 18:28:30:2830 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        bl.*,\n        b.title as book_title,\n        b.author as book_author,\n        b.isbn as book_isbn,\n        u.first_name || ' ' || u.last_name as user_name,\n        u.email as user_email,\n        EXTRACT(DAY FROM (NOW() - bl.due_date))::INTEGER as days_overdue\n      FROM book_loans bl\n      JOIN books b ON bl.book_id = b.id\n      JOIN users u ON bl.user_id = u.id\n      WHERE bl.status = 'active' AND bl.due_date < NOW()\n      ORDER BY bl.due_date ASC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 0
}
[0mGET /api/loans/overdue?limit=5 [36m304[0m 3.102 ms - -[0m
2025-08-02 18:29:00:290 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
2025-08-02 18:29:00:290 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
2025-08-02 18:29:00:290 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
2025-08-02 18:29:00:290 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
2025-08-02 18:30:17:3017 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 18:30:17:3017 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 18:30:17:3017 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 37,
  "rows": 10
}
[0mGET /api/books/recent [36m304[0m 37.734 ms - -[0m
2025-08-02 18:30:17:3017 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 39,
  "rows": 1
}
[0mGET /api/books/popular [36m304[0m 40.786 ms - -[0m
2025-08-02 18:30:17:3017 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 10
}
[0mGET /api/books/recent [36m304[0m 1.440 ms - -[0m
2025-08-02 18:30:17:3017 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 1
}
[0mGET /api/books/popular [36m304[0m 2.484 ms - -[0m
2025-08-02 18:30:17:3017 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 1,
  "rows": 1
}
2025-08-02 18:30:17:3017 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        COUNT(*) as total_loans,\n        COUNT(*) FILTER (WHERE status = 'active') as active_loans,\n        COUNT(*) FILTER (WHERE status = 'returned') as returned_loans,\n        COUNT(*) FILTER (WHERE status = 'overdue') as overdue_loans,\n        COUNT(*) FILTER (WHERE status = 'active' AND due_date < NOW()) as newly_overdue,\n        COUNT(*) FILTER (WHERE loan_date >= NOW() - INTERVAL '30 days') as loans_this_month,\n        AVG(EXTRACT(DAY FROM (return_date - loan_date)))::INTEGER as avg_loan_duration,\n        COUNT(DISTINCT user_id) as active_borrowers,\n        COUNT(DISTINCT book_id) as borrowed_books\n      FROM book_loans\n    ",
  "duration": 1,
  "rows": 1
}
[0mGET /api/loans/statistics [36m304[0m 2.526 ms - -[0m
2025-08-02 18:30:17:3017 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 0,
  "rows": 1
}
2025-08-02 18:30:17:3017 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        COUNT(*) as total_loans,\n        COUNT(*) FILTER (WHERE status = 'active') as active_loans,\n        COUNT(*) FILTER (WHERE status = 'returned') as returned_loans,\n        COUNT(*) FILTER (WHERE status = 'overdue') as overdue_loans,\n        COUNT(*) FILTER (WHERE status = 'active' AND due_date < NOW()) as newly_overdue,\n        COUNT(*) FILTER (WHERE loan_date >= NOW() - INTERVAL '30 days') as loans_this_month,\n        AVG(EXTRACT(DAY FROM (return_date - loan_date)))::INTEGER as avg_loan_duration,\n        COUNT(DISTINCT user_id) as active_borrowers,\n        COUNT(DISTINCT book_id) as borrowed_books\n      FROM book_loans\n    ",
  "duration": 0,
  "rows": 1
}
[0mGET /api/loans/statistics [36m304[0m 1.647 ms - -[0m
2025-08-02 18:30:28:3028 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT COUNT(*) FROM categories",
  "duration": 3,
  "rows": 1
}
2025-08-02 18:30:28:3028 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT COUNT(DISTINCT b.id) \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n     \n    ",
  "duration": 1,
  "rows": 1
}
2025-08-02 18:30:28:3028 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM categories ORDER BY name ASC LIMIT $1 OFFSET $2",
  "duration": 1,
  "rows": 9
}
[0mGET /api/categories [36m304[0m 5.832 ms - -[0m
2025-08-02 18:30:28:3028 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n    \n      \n      GROUP BY b.id\n      ORDER BY b.title ASC\n      LIMIT $1 OFFSET $2\n    ",
  "duration": 2,
  "rows": 12
}
[0mGET /api/books?page=1&limit=12 [32m200[0m 4.426 ms - -[0m
2025-08-02 18:30:28:3028 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT COUNT(*) FROM categories",
  "duration": 1,
  "rows": 1
}
2025-08-02 18:30:28:3028 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM categories ORDER BY name ASC LIMIT $1 OFFSET $2",
  "duration": 1,
  "rows": 9
}
[0mGET /api/categories [36m304[0m 2.376 ms - -[0m
2025-08-02 18:30:28:3028 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT COUNT(DISTINCT b.id) \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n     \n    ",
  "duration": 0,
  "rows": 1
}
2025-08-02 18:30:28:3028 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n    \n      \n      GROUP BY b.id\n      ORDER BY b.title ASC\n      LIMIT $1 OFFSET $2\n    ",
  "duration": 1,
  "rows": 12
}
[0mGET /api/books?page=1&limit=12 [36m304[0m 2.395 ms - -[0m
2025-08-02 18:30:32:3032 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 1
}
[0mGET /api/books/popular [36m304[0m 3.115 ms - -[0m
2025-08-02 18:30:32:3032 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 3,
  "rows": 10
}
[0mGET /api/books/recent [36m304[0m 3.178 ms - -[0m
2025-08-02 18:30:32:3032 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 1
}
[0mGET /api/books/popular [36m304[0m 3.228 ms - -[0m
2025-08-02 18:30:32:3032 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 3,
  "rows": 10
}
[0mGET /api/books/recent [36m304[0m 3.133 ms - -[0m
2025-08-02 18:30:32:3032 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 1,
  "rows": 1
}
2025-08-02 18:30:32:3032 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        COUNT(*) as total_loans,\n        COUNT(*) FILTER (WHERE status = 'active') as active_loans,\n        COUNT(*) FILTER (WHERE status = 'returned') as returned_loans,\n        COUNT(*) FILTER (WHERE status = 'overdue') as overdue_loans,\n        COUNT(*) FILTER (WHERE status = 'active' AND due_date < NOW()) as newly_overdue,\n        COUNT(*) FILTER (WHERE loan_date >= NOW() - INTERVAL '30 days') as loans_this_month,\n        AVG(EXTRACT(DAY FROM (return_date - loan_date)))::INTEGER as avg_loan_duration,\n        COUNT(DISTINCT user_id) as active_borrowers,\n        COUNT(DISTINCT book_id) as borrowed_books\n      FROM book_loans\n    ",
  "duration": 2,
  "rows": 1
}
[0mGET /api/loans/statistics [36m304[0m 4.109 ms - -[0m
2025-08-02 18:30:32:3032 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 0,
  "rows": 1
}
2025-08-02 18:30:32:3032 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        COUNT(*) as total_loans,\n        COUNT(*) FILTER (WHERE status = 'active') as active_loans,\n        COUNT(*) FILTER (WHERE status = 'returned') as returned_loans,\n        COUNT(*) FILTER (WHERE status = 'overdue') as overdue_loans,\n        COUNT(*) FILTER (WHERE status = 'active' AND due_date < NOW()) as newly_overdue,\n        COUNT(*) FILTER (WHERE loan_date >= NOW() - INTERVAL '30 days') as loans_this_month,\n        AVG(EXTRACT(DAY FROM (return_date - loan_date)))::INTEGER as avg_loan_duration,\n        COUNT(DISTINCT user_id) as active_borrowers,\n        COUNT(DISTINCT book_id) as borrowed_books\n      FROM book_loans\n    ",
  "duration": 1,
  "rows": 1
}
[0mGET /api/loans/statistics [36m304[0m 1.847 ms - -[0m
2025-08-02 18:30:33:3033 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT COUNT(*) FROM categories",
  "duration": 1,
  "rows": 1
}
2025-08-02 18:30:33:3033 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM categories ORDER BY name ASC LIMIT $1 OFFSET $2",
  "duration": 1,
  "rows": 9
}
[0mGET /api/categories [36m304[0m 3.580 ms - -[0m
2025-08-02 18:30:33:3033 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT COUNT(DISTINCT b.id) \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n     \n    ",
  "duration": 3,
  "rows": 1
}
2025-08-02 18:30:33:3033 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n    \n      \n      GROUP BY b.id\n      ORDER BY b.title ASC\n      LIMIT $1 OFFSET $2\n    ",
  "duration": 2,
  "rows": 12
}
[0mGET /api/books?page=1&limit=12 [36m304[0m 5.744 ms - -[0m
2025-08-02 18:30:33:3033 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT COUNT(*) FROM categories",
  "duration": 1,
  "rows": 1
}
2025-08-02 18:30:33:3033 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM categories ORDER BY name ASC LIMIT $1 OFFSET $2",
  "duration": 1,
  "rows": 9
}
[0mGET /api/categories [36m304[0m 3.792 ms - -[0m
2025-08-02 18:30:33:3033 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT COUNT(DISTINCT b.id) \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n     \n    ",
  "duration": 1,
  "rows": 1
}
2025-08-02 18:30:33:3033 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n    \n      \n      GROUP BY b.id\n      ORDER BY b.title ASC\n      LIMIT $1 OFFSET $2\n    ",
  "duration": 1,
  "rows": 12
}
[0mGET /api/books?page=1&limit=12 [36m304[0m 2.910 ms - -[0m
2025-08-02 18:31:03:313 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
2025-08-02 18:31:03:313 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node src/server.js`[39m
[dotenv@17.2.1] injecting env (19) from .env -- tip: ⚙️  enable debug logging with { debug: true }
[dotenv@17.2.1] injecting env (0) from .env -- tip: 🔐 prevent building .env in docker: https://dotenvx.com/prebuild
2025-08-02 18:33:41:3341 [32m[32minfo[32m[39m: [32m[32mTesting database connection...[32m[39m
2025-08-02 18:33:41:3341 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 18:33:41:3341 [32m[32minfo[32m[39m: [32m[32mDatabase connected successfully[32m[39m {
  "poolStats": {
    "total": 1,
    "idle": 0,
    "waiting": 0
  }
}
2025-08-02 18:33:41:3341 [32m[32minfo[32m[39m: [32m[32mDatabase connection established[32m[39m
2025-08-02 18:33:41:3341 [32m[32minfo[32m[39m: [32m[32mLibrary Management System API started[32m[39m
2025-08-02 18:33:41:3341 [32m[32minfo[32m[39m: [32m[32m📡 Server listening on port 5001[32m[39m
2025-08-02 18:33:41:3341 [32m[32minfo[32m[39m: [32m[32m🌍 Environment: development[32m[39m
2025-08-02 18:33:41:3341 [32m[32minfo[32m[39m: [32m[32mAPI Documentation: http://localhost:5001/api-docs[32m[39m
2025-08-02 18:33:41:3341 [32m[32minfo[32m[39m: [32m[32mHealth Check: http://localhost:5001/health[32m[39m
2025-08-02 18:33:41:3341 [32m[32minfo[32m[39m: [32m[32m[32m[39m
[32m[32mTest Accounts:[32m[39m
2025-08-02 18:33:41:3341 [32m[32minfo[32m[39m: [32m[32mLibrarian: librarian@library.com / LibPass123![32m[39m
2025-08-02 18:33:41:3341 [32m[32minfo[32m[39m: [32m[32mMember: member@library.com / MemPass123![32m[39m
2025-08-02 18:33:41:3341 [32m[32minfo[32m[39m: [32m[32mAikaterini: aikaterini.chavela@library.com / AikaPass123![32m[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node src/server.js`[39m
[dotenv@17.2.1] injecting env (19) from .env -- tip: ⚙️  enable debug logging with { debug: true }
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node src/server.js`[39m
[dotenv@17.2.1] injecting env (19) from .env -- tip: ⚙️  override existing env vars with { override: true }
[dotenv@17.2.1] injecting env (0) from .env -- tip: 🔐 prevent building .env in docker: https://dotenvx.com/prebuild
2025-08-02 18:33:54:3354 [32m[32minfo[32m[39m: [32m[32mTesting database connection...[32m[39m
2025-08-02 18:33:54:3354 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 18:33:54:3354 [32m[32minfo[32m[39m: [32m[32mDatabase connected successfully[32m[39m {
  "poolStats": {
    "total": 1,
    "idle": 0,
    "waiting": 0
  }
}
2025-08-02 18:33:54:3354 [32m[32minfo[32m[39m: [32m[32mDatabase connection established[32m[39m
2025-08-02 18:33:54:3354 [32m[32minfo[32m[39m: [32m[32mLibrary Management System API started[32m[39m
2025-08-02 18:33:54:3354 [32m[32minfo[32m[39m: [32m[32m📡 Server listening on port 5001[32m[39m
2025-08-02 18:33:54:3354 [32m[32minfo[32m[39m: [32m[32m🌍 Environment: development[32m[39m
2025-08-02 18:33:54:3354 [32m[32minfo[32m[39m: [32m[32mAPI Documentation: http://localhost:5001/api-docs[32m[39m
2025-08-02 18:33:54:3354 [32m[32minfo[32m[39m: [32m[32mHealth Check: http://localhost:5001/health[32m[39m
2025-08-02 18:33:54:3354 [32m[32minfo[32m[39m: [32m[32m[32m[39m
[32m[32mTest Accounts:[32m[39m
2025-08-02 18:33:54:3354 [32m[32minfo[32m[39m: [32m[32mLibrarian: librarian@library.com / LibPass123![32m[39m
2025-08-02 18:33:54:3354 [32m[32minfo[32m[39m: [32m[32mMember: member@library.com / MemPass123![32m[39m
2025-08-02 18:33:54:3354 [32m[32minfo[32m[39m: [32m[32mAikaterini: aikaterini.chavela@library.com / AikaPass123![32m[39m
2025-08-02 18:34:24:3424 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node src/server.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node src/server.js`[39m
[dotenv@17.2.1] injecting env (19) from .env -- tip: 📡 observe env with Radar: https://dotenvx.com/radar
[dotenv@17.2.1] injecting env (0) from .env -- tip: ⚙️  enable debug logging with { debug: true }
2025-08-02 18:34:32:3432 [32m[32minfo[32m[39m: [32m[32mTesting database connection...[32m[39m
2025-08-02 18:34:33:3433 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 18:34:33:3433 [32m[32minfo[32m[39m: [32m[32mDatabase connected successfully[32m[39m {
  "poolStats": {
    "total": 1,
    "idle": 0,
    "waiting": 0
  }
}
2025-08-02 18:34:33:3433 [32m[32minfo[32m[39m: [32m[32mDatabase connection established[32m[39m
2025-08-02 18:34:33:3433 [32m[32minfo[32m[39m: [32m[32mLibrary Management System API started[32m[39m
2025-08-02 18:34:33:3433 [32m[32minfo[32m[39m: [32m[32m📡 Server listening on port 5001[32m[39m
2025-08-02 18:34:33:3433 [32m[32minfo[32m[39m: [32m[32m🌍 Environment: development[32m[39m
2025-08-02 18:34:33:3433 [32m[32minfo[32m[39m: [32m[32mAPI Documentation: http://localhost:5001/api-docs[32m[39m
2025-08-02 18:34:33:3433 [32m[32minfo[32m[39m: [32m[32mHealth Check: http://localhost:5001/health[32m[39m
2025-08-02 18:34:33:3433 [32m[32minfo[32m[39m: [32m[32m[32m[39m
[32m[32mTest Accounts:[32m[39m
2025-08-02 18:34:33:3433 [32m[32minfo[32m[39m: [32m[32mLibrarian: librarian@library.com / LibPass123![32m[39m
2025-08-02 18:34:33:3433 [32m[32minfo[32m[39m: [32m[32mMember: member@library.com / MemPass123![32m[39m
2025-08-02 18:34:33:3433 [32m[32minfo[32m[39m: [32m[32mAikaterini: aikaterini.chavela@library.com / AikaPass123![32m[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node src/server.js`[39m
[dotenv@17.2.1] injecting env (19) from .env -- tip: 🔐 prevent building .env in docker: https://dotenvx.com/prebuild
[dotenv@17.2.1] injecting env (0) from .env -- tip: ⚙️  suppress all logs with { quiet: true }
2025-08-02 18:34:33:3433 [32m[32minfo[32m[39m: [32m[32mTesting database connection...[32m[39m
2025-08-02 18:34:33:3433 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 18:34:33:3433 [32m[32minfo[32m[39m: [32m[32mDatabase connected successfully[32m[39m {
  "poolStats": {
    "total": 1,
    "idle": 0,
    "waiting": 0
  }
}
2025-08-02 18:34:33:3433 [32m[32minfo[32m[39m: [32m[32mDatabase connection established[32m[39m
2025-08-02 18:34:33:3433 [32m[32minfo[32m[39m: [32m[32mLibrary Management System API started[32m[39m
2025-08-02 18:34:33:3433 [32m[32minfo[32m[39m: [32m[32m📡 Server listening on port 5001[32m[39m
2025-08-02 18:34:33:3433 [32m[32minfo[32m[39m: [32m[32m🌍 Environment: development[32m[39m
2025-08-02 18:34:33:3433 [32m[32minfo[32m[39m: [32m[32mAPI Documentation: http://localhost:5001/api-docs[32m[39m
2025-08-02 18:34:33:3433 [32m[32minfo[32m[39m: [32m[32mHealth Check: http://localhost:5001/health[32m[39m
2025-08-02 18:34:33:3433 [32m[32minfo[32m[39m: [32m[32m[32m[39m
[32m[32mTest Accounts:[32m[39m
2025-08-02 18:34:33:3433 [32m[32minfo[32m[39m: [32m[32mLibrarian: librarian@library.com / LibPass123![32m[39m
2025-08-02 18:34:33:3433 [32m[32minfo[32m[39m: [32m[32mMember: member@library.com / MemPass123![32m[39m
2025-08-02 18:34:33:3433 [32m[32minfo[32m[39m: [32m[32mAikaterini: aikaterini.chavela@library.com / AikaPass123![32m[39m
2025-08-02 18:35:03:353 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node src/server.js`[39m
[dotenv@17.2.1] injecting env (19) from .env -- tip: 🛠️  run anywhere with `dotenvx run -- yourcommand`
[dotenv@17.2.1] injecting env (0) from .env -- tip: 📡 auto-backup env with Radar: https://dotenvx.com/radar
2025-08-02 18:36:28:3628 [32m[32minfo[32m[39m: [32m[32mTesting database connection...[32m[39m
2025-08-02 18:36:28:3628 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 18:36:28:3628 [32m[32minfo[32m[39m: [32m[32mDatabase connected successfully[32m[39m {
  "poolStats": {
    "total": 1,
    "idle": 0,
    "waiting": 0
  }
}
2025-08-02 18:36:28:3628 [32m[32minfo[32m[39m: [32m[32mDatabase connection established[32m[39m
2025-08-02 18:36:28:3628 [32m[32minfo[32m[39m: [32m[32mLibrary Management System API started[32m[39m
2025-08-02 18:36:28:3628 [32m[32minfo[32m[39m: [32m[32mServer listening on port 5001[32m[39m
2025-08-02 18:36:28:3628 [32m[32minfo[32m[39m: [32m[32mEnvironment: development[32m[39m
2025-08-02 18:36:28:3628 [32m[32minfo[32m[39m: [32m[32mAPI Documentation: http://localhost:5001/api-docs[32m[39m
2025-08-02 18:36:28:3628 [32m[32minfo[32m[39m: [32m[32mHealth Check: http://localhost:5001/health[32m[39m
2025-08-02 18:36:28:3628 [32m[32minfo[32m[39m: [32m[32m[32m[39m
[32m[32mTest Accounts:[32m[39m
2025-08-02 18:36:28:3628 [32m[32minfo[32m[39m: [32m[32mLibrarian: librarian@library.com / LibPass123![32m[39m
2025-08-02 18:36:28:3628 [32m[32minfo[32m[39m: [32m[32mMember: member@library.com / MemPass123![32m[39m
2025-08-02 18:36:28:3628 [32m[32minfo[32m[39m: [32m[32mAikaterini: aikaterini.chavela@library.com / AikaPass123![32m[39m
2025-08-02 18:36:58:3658 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
2025-08-02 18:39:13:3913 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 18:39:13:3913 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 18:39:13:3913 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 18:39:13:3913 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT COUNT(*) FROM categories",
  "duration": 35,
  "rows": 1
}
2025-08-02 18:39:13:3913 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 30,
  "rows": 1
}
[0mGET /api/auth/me [36m304[0m 32.762 ms - -[0m
2025-08-02 18:39:13:3913 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM categories ORDER BY name ASC LIMIT $1 OFFSET $2",
  "duration": 3,
  "rows": 9
}
[0mGET /api/categories [36m304[0m 42.178 ms - -[0m
2025-08-02 18:39:13:3913 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT COUNT(DISTINCT b.id) \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n     \n    ",
  "duration": 36,
  "rows": 1
}
2025-08-02 18:39:13:3913 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n    \n      \n      GROUP BY b.id\n      ORDER BY b.title ASC\n      LIMIT $1 OFFSET $2\n    ",
  "duration": 1,
  "rows": 12
}
[0mGET /api/books?page=1&limit=12 [36m304[0m 38.974 ms - -[0m
2025-08-02 18:39:13:3913 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 2,
  "rows": 1
}
[0mGET /api/auth/me [36m304[0m 2.619 ms - -[0m
2025-08-02 18:39:13:3913 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT COUNT(*) FROM categories",
  "duration": 2,
  "rows": 1
}
2025-08-02 18:39:13:3913 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM categories ORDER BY name ASC LIMIT $1 OFFSET $2",
  "duration": 1,
  "rows": 9
}
[0mGET /api/categories [36m304[0m 4.827 ms - -[0m
2025-08-02 18:39:13:3913 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT COUNT(DISTINCT b.id) \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n     \n    ",
  "duration": 4,
  "rows": 1
}
2025-08-02 18:39:13:3913 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n    \n      \n      GROUP BY b.id\n      ORDER BY b.title ASC\n      LIMIT $1 OFFSET $2\n    ",
  "duration": 1,
  "rows": 12
}
[0mGET /api/books?page=1&limit=12 [36m304[0m 5.975 ms - -[0m
2025-08-02 18:49:08:498 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
2025-08-02 18:49:08:498 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
2025-08-02 18:49:08:498 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
[0mGET /api/auth/me [33m401[0m 0.859 ms - 48[0m
[0mGET /api/auth/me [33m401[0m 0.385 ms - 48[0m
2025-08-02 19:10:26:1026 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 19:10:26:1026 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 19:10:26:1026 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT COUNT(*) FROM categories",
  "duration": 35,
  "rows": 1
}
2025-08-02 19:10:26:1026 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM categories ORDER BY name ASC LIMIT $1 OFFSET $2",
  "duration": 1,
  "rows": 9
}
[0mGET /api/categories [36m304[0m 36.715 ms - -[0m
2025-08-02 19:10:26:1026 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT COUNT(DISTINCT b.id) \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n     \n    ",
  "duration": 35,
  "rows": 1
}
2025-08-02 19:10:26:1026 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 19:10:26:1026 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 19:10:26:1026 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 23,
  "rows": 1
}
2025-08-02 19:10:26:1026 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 21,
  "rows": 1
}
2025-08-02 19:10:26:1026 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n    \n      \n      GROUP BY b.id\n      ORDER BY b.title ASC\n      LIMIT $1 OFFSET $2\n    ",
  "duration": 4,
  "rows": 12
}
[0mGET /api/books?page=1&limit=12 [36m304[0m 39.142 ms - -[0m
2025-08-02 19:10:26:1026 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT COUNT(*) FROM categories",
  "duration": 2,
  "rows": 1
}
2025-08-02 19:10:26:1026 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM categories ORDER BY name ASC LIMIT $1 OFFSET $2",
  "duration": 1,
  "rows": 9
}
[0mGET /api/categories [36m304[0m 3.662 ms - -[0m
2025-08-02 19:10:26:1026 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT COUNT(DISTINCT b.id) \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n     \n    ",
  "duration": 0,
  "rows": 1
}
2025-08-02 19:10:26:1026 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "UPDATE users SET refresh_token = $1 WHERE id = $2",
  "duration": 3,
  "rows": 1
}
[0mPOST /api/auth/refresh [32m200[0m 27.540 ms - 604[0m
2025-08-02 19:10:26:1026 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n    \n      \n      GROUP BY b.id\n      ORDER BY b.title ASC\n      LIMIT $1 OFFSET $2\n    ",
  "duration": 0,
  "rows": 12
}
[0mGET /api/books?page=1&limit=12 [36m304[0m 2.348 ms - -[0m
2025-08-02 19:10:26:1026 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "UPDATE users SET refresh_token = $1 WHERE id = $2",
  "duration": 3,
  "rows": 1
}
[0mPOST /api/auth/refresh [32m200[0m 25.680 ms - 604[0m
2025-08-02 19:10:26:1026 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 0,
  "rows": 1
}
[0mGET /api/auth/me [32m200[0m 0.711 ms - 294[0m
2025-08-02 19:10:26:1026 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM users WHERE id = $1",
  "duration": 0,
  "rows": 1
}
[0mGET /api/auth/me [36m304[0m 1.757 ms - -[0m
2025-08-02 19:17:50:1750 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
2025-08-02 19:17:50:1750 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
2025-08-02 19:17:50:1750 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
2025-08-02 19:17:50:1750 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
2025-08-02 19:21:44:2144 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 19:21:44:2144 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 19:21:44:2144 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 32,
  "rows": 10
}
2025-08-02 19:21:44:2144 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 35,
  "rows": 1
}
[0mGET /api/books/popular [32m200[0m 36.566 ms - 328[0m
[0mGET /api/books/recent [32m200[0m 32.895 ms - -[0m
2025-08-02 19:21:44:2144 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 1
}
[0mGET /api/books/popular [36m304[0m 2.532 ms - -[0m
2025-08-02 19:21:44:2144 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 10
}
[0mGET /api/books/recent [36m304[0m 2.033 ms - -[0m
2025-08-02 19:21:44:2144 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 10
}
[0mGET /api/books/recent [32m200[0m 1.270 ms - -[0m
2025-08-02 19:21:44:2144 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 1
}
[0mGET /api/books/popular [32m200[0m 2.480 ms - 328[0m
2025-08-02 19:21:47:2147 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 1
}
[0mGET /api/books/popular [32m200[0m 2.006 ms - 328[0m
2025-08-02 19:21:47:2147 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 10
}
[0mGET /api/books/recent [32m200[0m 2.656 ms - -[0m
2025-08-02 19:21:47:2147 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 1
}
[0mGET /api/books/popular [36m304[0m 1.575 ms - -[0m
2025-08-02 19:21:47:2147 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 10
}
[0mGET /api/books/recent [36m304[0m 1.482 ms - -[0m
2025-08-02 19:21:47:2147 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 1
}
[0mGET /api/books/popular [32m200[0m 1.892 ms - 328[0m
2025-08-02 19:21:47:2147 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 10
}
[0mGET /api/books/recent [32m200[0m 1.873 ms - -[0m
2025-08-02 19:21:47:2147 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 1
}
[0mGET /api/books/popular [32m200[0m 1.999 ms - 328[0m
2025-08-02 19:21:47:2147 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 10
}
[0mGET /api/books/recent [32m200[0m 2.055 ms - -[0m
2025-08-02 19:21:47:2147 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 1
}
[0mGET /api/books/popular [36m304[0m 1.737 ms - -[0m
2025-08-02 19:21:47:2147 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 10
}
[0mGET /api/books/recent [36m304[0m 1.493 ms - -[0m
2025-08-02 19:21:47:2147 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 1
}
[0mGET /api/books/popular [32m200[0m 1.780 ms - 328[0m
2025-08-02 19:21:47:2147 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 10
}
[0mGET /api/books/recent [32m200[0m 2.322 ms - -[0m
2025-08-02 19:21:48:2148 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 1
}
[0mGET /api/books/popular [32m200[0m 3.141 ms - 328[0m
2025-08-02 19:21:48:2148 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 10
}
[0mGET /api/books/recent [32m200[0m 3.346 ms - -[0m
2025-08-02 19:21:48:2148 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 1
}
[0mGET /api/books/popular [36m304[0m 1.922 ms - -[0m
2025-08-02 19:21:48:2148 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 10
}
[0mGET /api/books/recent [36m304[0m 1.956 ms - -[0m
2025-08-02 19:21:48:2148 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 1
}
[0mGET /api/books/popular [32m200[0m 1.378 ms - 328[0m
2025-08-02 19:21:48:2148 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 10
}
[0mGET /api/books/recent [32m200[0m 1.637 ms - -[0m
2025-08-02 19:22:18:2218 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
2025-08-02 19:22:18:2218 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
2025-08-02 19:23:05:235 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 19:23:05:235 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 19:23:05:235 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 35,
  "rows": 10
}
2025-08-02 19:23:05:235 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 37,
  "rows": 1
}
[0mGET /api/books/popular [32m200[0m 37.574 ms - 328[0m
[0mGET /api/books/recent [32m200[0m 35.515 ms - -[0m
2025-08-02 19:23:05:235 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 1
}
[0mGET /api/books/popular [36m304[0m 1.317 ms - -[0m
2025-08-02 19:23:05:235 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 10
}
[0mGET /api/books/recent [36m304[0m 1.303 ms - -[0m
2025-08-02 19:23:05:235 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 10
}
2025-08-02 19:23:05:235 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 1
}
[0mGET /api/books/popular [32m200[0m 2.821 ms - 328[0m
[0mGET /api/books/recent [32m200[0m 1.624 ms - -[0m
2025-08-02 19:23:05:235 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 1
}
[0mGET /api/books/popular [32m200[0m 2.322 ms - 328[0m
2025-08-02 19:23:05:235 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 10
}
[0mGET /api/books/recent [32m200[0m 2.531 ms - -[0m
2025-08-02 19:23:05:235 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 1
}
[0mGET /api/books/popular [36m304[0m 1.774 ms - -[0m
2025-08-02 19:23:05:235 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 10
}
[0mGET /api/books/recent [36m304[0m 1.441 ms - -[0m
2025-08-02 19:23:05:235 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 1
}
[0mGET /api/books/popular [32m200[0m 1.368 ms - 328[0m
2025-08-02 19:23:05:235 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 10
}
[0mGET /api/books/recent [32m200[0m 1.781 ms - -[0m
2025-08-02 19:23:05:235 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 1
}
[0mGET /api/books/popular [32m200[0m 2.136 ms - 328[0m
2025-08-02 19:23:05:235 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 10
}
[0mGET /api/books/recent [32m200[0m 2.163 ms - -[0m
2025-08-02 19:23:05:235 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 1
}
[0mGET /api/books/popular [36m304[0m 2.952 ms - -[0m
2025-08-02 19:23:05:235 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 10
}
[0mGET /api/books/recent [36m304[0m 2.428 ms - -[0m
2025-08-02 19:23:05:235 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 1
}
[0mGET /api/books/popular [32m200[0m 1.776 ms - 328[0m
2025-08-02 19:23:05:235 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 10
}
[0mGET /api/books/recent [32m200[0m 1.726 ms - -[0m
2025-08-02 19:23:05:235 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 1
}
[0mGET /api/books/popular [32m200[0m 2.079 ms - 328[0m
2025-08-02 19:23:05:235 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 10
}
[0mGET /api/books/recent [32m200[0m 2.101 ms - -[0m
2025-08-02 19:23:05:235 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 1
}
[0mGET /api/books/popular [36m304[0m 1.342 ms - -[0m
2025-08-02 19:23:05:235 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 10
}
[0mGET /api/books/recent [36m304[0m 1.165 ms - -[0m
2025-08-02 19:23:05:235 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 1
}
[0mGET /api/books/popular [32m200[0m 1.559 ms - 328[0m
2025-08-02 19:23:05:235 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 10
}
[0mGET /api/books/recent [32m200[0m 1.314 ms - -[0m
2025-08-02 19:23:07:237 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 1
}
[0mGET /api/books/popular [32m200[0m 2.961 ms - 328[0m
2025-08-02 19:23:07:237 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 3,
  "rows": 10
}
[0mGET /api/books/recent [32m200[0m 3.229 ms - -[0m
2025-08-02 19:23:07:237 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 1
}
[0mGET /api/books/popular [36m304[0m 3.422 ms - -[0m
2025-08-02 19:23:07:237 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 10
}
[0mGET /api/books/recent [36m304[0m 2.110 ms - -[0m
2025-08-02 19:23:07:237 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 0,
  "rows": 1
}
[0mGET /api/books/popular [32m200[0m 1.595 ms - 328[0m
2025-08-02 19:23:07:237 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 10
}
[0mGET /api/books/recent [32m200[0m 2.422 ms - -[0m
2025-08-02 19:23:09:239 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 1
}
[0mGET /api/books/popular [32m200[0m 2.447 ms - 328[0m
2025-08-02 19:23:09:239 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 10
}
[0mGET /api/books/recent [32m200[0m 2.260 ms - -[0m
2025-08-02 19:23:09:239 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 1
}
[0mGET /api/books/popular [36m304[0m 2.069 ms - -[0m
2025-08-02 19:23:09:239 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 10
}
[0mGET /api/books/recent [36m304[0m 1.613 ms - -[0m
2025-08-02 19:23:09:239 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 1
}
[0mGET /api/books/popular [32m200[0m 2.399 ms - 328[0m
2025-08-02 19:23:09:239 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 3,
  "rows": 10
}
[0mGET /api/books/recent [32m200[0m 3.489 ms - -[0m
2025-08-02 19:23:12:2312 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 3,
  "rows": 1
}
[0mGET /api/books/popular [32m200[0m 3.433 ms - 328[0m
2025-08-02 19:23:12:2312 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 3,
  "rows": 10
}
[0mGET /api/books/recent [32m200[0m 3.627 ms - -[0m
2025-08-02 19:23:12:2312 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 1
}
[0mGET /api/books/popular [36m304[0m 3.453 ms - -[0m
2025-08-02 19:23:12:2312 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 10
}
[0mGET /api/books/recent [36m304[0m 2.782 ms - -[0m
2025-08-02 19:23:12:2312 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 1
}
[0mGET /api/books/popular [32m200[0m 2.461 ms - 328[0m
2025-08-02 19:23:12:2312 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 5,
  "rows": 10
}
[0mGET /api/books/recent [32m200[0m 6.104 ms - -[0m
2025-08-02 19:23:14:2314 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT COUNT(*) FROM categories",
  "duration": 2,
  "rows": 1
}
2025-08-02 19:23:14:2314 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM categories ORDER BY name ASC LIMIT $1 OFFSET $2",
  "duration": 1,
  "rows": 9
}
2025-08-02 19:23:14:2314 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT COUNT(DISTINCT b.id) \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n     \n    ",
  "duration": 2,
  "rows": 1
}
[0mGET /api/categories [32m200[0m 3.528 ms - -[0m
2025-08-02 19:23:14:2314 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n    \n      \n      GROUP BY b.id\n      ORDER BY b.title ASC\n      LIMIT $1 OFFSET $2\n    ",
  "duration": 2,
  "rows": 12
}
2025-08-02 19:23:14:2314 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT COUNT(*) FROM categories",
  "duration": 1,
  "rows": 1
}
2025-08-02 19:23:14:2314 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM categories ORDER BY name ASC LIMIT $1 OFFSET $2",
  "duration": 1,
  "rows": 9
}
[0mGET /api/categories [36m304[0m 2.663 ms - -[0m
[0mGET /api/books?page=1&limit=12 [32m200[0m 5.187 ms - -[0m
2025-08-02 19:23:14:2314 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT COUNT(*) FROM categories",
  "duration": 1,
  "rows": 1
}
2025-08-02 19:23:14:2314 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT COUNT(DISTINCT b.id) \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n     \n    ",
  "duration": 1,
  "rows": 1
}
2025-08-02 19:23:14:2314 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM categories ORDER BY name ASC LIMIT $1 OFFSET $2",
  "duration": 0,
  "rows": 9
}
2025-08-02 19:23:14:2314 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n    \n      \n      GROUP BY b.id\n      ORDER BY b.title ASC\n      LIMIT $1 OFFSET $2\n    ",
  "duration": 1,
  "rows": 12
}
[0mGET /api/categories [32m200[0m 3.353 ms - -[0m
[0mGET /api/books?page=1&limit=12 [32m200[0m 2.891 ms - -[0m
2025-08-02 19:23:15:2315 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 1
}
[0mGET /api/books/popular [32m200[0m 2.101 ms - 328[0m
2025-08-02 19:23:15:2315 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 10
}
[0mGET /api/books/recent [32m200[0m 2.359 ms - -[0m
2025-08-02 19:23:15:2315 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 1
}
[0mGET /api/books/popular [36m304[0m 2.560 ms - -[0m
2025-08-02 19:23:15:2315 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 10
}
[0mGET /api/books/recent [36m304[0m 2.276 ms - -[0m
2025-08-02 19:23:15:2315 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 1
}
[0mGET /api/books/popular [32m200[0m 1.743 ms - 328[0m
2025-08-02 19:23:15:2315 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 10
}
[0mGET /api/books/recent [32m200[0m 1.896 ms - -[0m
2025-08-02 19:23:16:2316 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT COUNT(*) FROM categories",
  "duration": 1,
  "rows": 1
}
2025-08-02 19:23:16:2316 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT COUNT(DISTINCT b.id) \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n     \n    ",
  "duration": 1,
  "rows": 1
}
2025-08-02 19:23:16:2316 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM categories ORDER BY name ASC LIMIT $1 OFFSET $2",
  "duration": 0,
  "rows": 9
}
2025-08-02 19:23:16:2316 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n    \n      \n      GROUP BY b.id\n      ORDER BY b.title ASC\n      LIMIT $1 OFFSET $2\n    ",
  "duration": 1,
  "rows": 12
}
[0mGET /api/categories [32m200[0m 2.823 ms - -[0m
[0mGET /api/books?page=1&limit=12 [32m200[0m 2.671 ms - -[0m
2025-08-02 19:23:16:2316 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT COUNT(*) FROM categories",
  "duration": 1,
  "rows": 1
}
2025-08-02 19:23:16:2316 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT COUNT(DISTINCT b.id) \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n     \n    ",
  "duration": 1,
  "rows": 1
}
2025-08-02 19:23:16:2316 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM categories ORDER BY name ASC LIMIT $1 OFFSET $2",
  "duration": 1,
  "rows": 9
}
[0mGET /api/categories [36m304[0m 3.304 ms - -[0m
2025-08-02 19:23:16:2316 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n    \n      \n      GROUP BY b.id\n      ORDER BY b.title ASC\n      LIMIT $1 OFFSET $2\n    ",
  "duration": 1,
  "rows": 12
}
[0mGET /api/books?page=1&limit=12 [36m304[0m 3.270 ms - -[0m
2025-08-02 19:23:16:2316 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT COUNT(*) FROM categories",
  "duration": 3,
  "rows": 1
}
2025-08-02 19:23:16:2316 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT COUNT(DISTINCT b.id) \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n     \n    ",
  "duration": 3,
  "rows": 1
}
2025-08-02 19:23:16:2316 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "SELECT * FROM categories ORDER BY name ASC LIMIT $1 OFFSET $2",
  "duration": 2,
  "rows": 9
}
2025-08-02 19:23:16:2316 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      \n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n    \n      \n      GROUP BY b.id\n      ORDER BY b.title ASC\n      LIMIT $1 OFFSET $2\n    ",
  "duration": 2,
  "rows": 12
}
[0mGET /api/categories [32m200[0m 5.725 ms - -[0m
[0mGET /api/books?page=1&limit=12 [32m200[0m 5.651 ms - -[0m
2025-08-02 19:23:16:2316 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 1
}
[0mGET /api/books/popular [32m200[0m 3.102 ms - 328[0m
2025-08-02 19:23:16:2316 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 3,
  "rows": 10
}
[0mGET /api/books/recent [32m200[0m 3.498 ms - -[0m
2025-08-02 19:23:16:2316 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 1
}
[0mGET /api/books/popular [36m304[0m 2.962 ms - -[0m
2025-08-02 19:23:16:2316 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 10
}
[0mGET /api/books/recent [36m304[0m 1.820 ms - -[0m
2025-08-02 19:23:16:2316 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COUNT(bl.id) as borrow_count,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_loans bl ON b.id = bl.book_id \n        AND bl.loan_date >= NOW() - INTERVAL '30 days'\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      GROUP BY b.id\n      HAVING COUNT(bl.id) > 0\n      ORDER BY borrow_count DESC, b.title ASC\n      LIMIT $1\n    ",
  "duration": 1,
  "rows": 1
}
[0mGET /api/books/popular [32m200[0m 2.015 ms - 328[0m
2025-08-02 19:23:16:2316 [37m[37mdebug[37m[39m: [37m[37mExecuted query[37m[39m {
  "text": "\n      SELECT \n        b.*,\n        COALESCE(\n          json_agg(\n            json_build_object('id', c.id, 'name', c.name, 'description', c.description)\n          ) FILTER (WHERE c.id IS NOT NULL), \n          '[]'\n        ) as categories\n      FROM books b\n      LEFT JOIN book_categories bc ON b.id = bc.book_id\n      LEFT JOIN categories c ON bc.category_id = c.id\n      \n      GROUP BY b.id\n      ORDER BY b.created_at DESC\n      LIMIT $1\n    ",
  "duration": 2,
  "rows": 10
}
[0mGET /api/books/recent [32m200[0m 2.228 ms - -[0m
2025-08-02 19:23:46:2346 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
2025-08-02 19:23:46:2346 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node src/server.js`[39m
[dotenv@17.2.1] injecting env (19) from .env -- tip: ⚙️  enable debug logging with { debug: true }
[dotenv@17.2.1] injecting env (0) from .env -- tip: 🔐 encrypt with Dotenvx: https://dotenvx.com
2025-08-02 19:36:53:3653 [32m[32minfo[32m[39m: [32m[32mTesting database connection...[32m[39m
2025-08-02 19:36:53:3653 [37m[37mdebug[37m[39m: [37m[37mNew database client connected[37m[39m
2025-08-02 19:36:53:3653 [32m[32minfo[32m[39m: [32m[32mDatabase connected successfully[32m[39m {
  "poolStats": {
    "total": 1,
    "idle": 0,
    "waiting": 0
  }
}
2025-08-02 19:36:53:3653 [32m[32minfo[32m[39m: [32m[32mDatabase connection established[32m[39m
2025-08-02 19:36:53:3653 [32m[32minfo[32m[39m: [32m[32mLibrary Management System API started[32m[39m
2025-08-02 19:36:53:3653 [32m[32minfo[32m[39m: [32m[32mServer listening on port 5001[32m[39m
2025-08-02 19:36:53:3653 [32m[32minfo[32m[39m: [32m[32mEnvironment: development[32m[39m
2025-08-02 19:36:53:3653 [32m[32minfo[32m[39m: [32m[32mAPI Documentation: http://localhost:5001/api-docs[32m[39m
2025-08-02 19:36:53:3653 [32m[32minfo[32m[39m: [32m[32mHealth Check: http://localhost:5001/health[32m[39m
2025-08-02 19:36:53:3653 [32m[32minfo[32m[39m: [32m[32m[32m[39m
[32m[32mTest Accounts:[32m[39m
2025-08-02 19:36:53:3653 [32m[32minfo[32m[39m: [32m[32mLibrarian: librarian@library.com / LibPass123![32m[39m
2025-08-02 19:36:53:3653 [32m[32minfo[32m[39m: [32m[32mMember: member@library.com / MemPass123![32m[39m
2025-08-02 19:36:53:3653 [32m[32minfo[32m[39m: [32m[32mAikaterini: aikaterini.chavela@library.com / AikaPass123![32m[39m
2025-08-02 19:37:23:3723 [37m[37mdebug[37m[39m: [37m[37mDatabase client removed[37m[39m
2025-08-02 19:38:30:3830 [32m[32minfo[32m[39m: [32m[32mSIGTERM received, closing database connections[32m[39m
2025-08-02 19:38:30:3830 [32m[32minfo[32m[39m: [32m[32m[32m[39m
[32m[32mSIGTERM received, starting graceful shutdown...[32m[39m
2025-08-02 19:38:30:3830 [32m[32minfo[32m[39m: [32m[32mHTTP server closed[32m[39m
2025-08-02 19:38:30:3830 [31m[31merror[31m[39m: [31m[31mError closing database pool[31m[39m - Called end on pool more than once {}
2025-08-02 19:38:30:3830 [32m[32minfo[32m[39m: [32m[32mDatabase pool closed gracefully[32m[39m
2025-08-02 19:38:30:3830 [31m[31merror[31m[39m: [31m[31mError closing database connections: Called end on pool more than once[31m[39m
Error: Called end on pool more than once
    at BoundPool.end (/Users/igeorgiadis/Library/Mobile Documents/com~apple~CloudDocs/cf7-kchavela-2025/backend/node_modules/pg-pool/index.js:453:19)
    at closePool (/Users/igeorgiadis/Library/Mobile Documents/com~apple~CloudDocs/cf7-kchavela-2025/backend/src/config/database.js:162:16)
    at Server.<anonymous> (/Users/igeorgiadis/Library/Mobile Documents/com~apple~CloudDocs/cf7-kchavela-2025/backend/src/server.js:96:17)
    at Object.onceWrapper (node:events:632:28)
    at Server.emit (node:events:518:28)
    at emitCloseNT (node:net:2416:8)
    at process.processTicksAndRejections (node:internal/process/task_queues:89:21) {}
